/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.AuthorBUS;
import BUS.BookBUS;
import BUS.GenreBUS;
import DTO.BookDTO;
import My_Functions.Func_Class;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manh Hai
 */
public class BooksListForm extends javax.swing.JFrame {

    /**
     * Creates new form MembersListForm
     */
    
    BookBUS book = new BookBUS();
    
    My_Functions.Func_Class func = new Func_Class();
    
    AuthorBUS author = new AuthorBUS();
    
    GenreBUS genre = new GenreBUS();
    
    String myPath = "C:\\Users\\Manh Hai\\Documents\\NetBeansProjects\\Library_Management_System\\src\\Books_image";
    
    public BooksListForm() {
        initComponents();
        
        // set center the form 
        this.setLocationRelativeTo(null);
        
        // add a border to the panel
        Border panelHeaderBorder = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(211, 84, 0));
        jPanel1.setBorder(panelHeaderBorder);
        
        // display image in the top
        func.displayImageByPath(90, 60, "../My_Images/book-ga.png", jLabel_FormTitle);
        
        // customize the jtable
        func.customTable(jTable_BooksList_);
        
        // cumtomize table header row
        func.customTableHeader(jTable_BooksList_, new Color(36, 37, 42), 12);
        
        // add a black border to the jlabel image
        Border lableImageHeaderBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 0, 0));
        jLabel_Image.setBorder(lableImageHeaderBorder);
        
        // display books in the jTable
        populateJtableWithBooks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_FormTitle = new javax.swing.JLabel();
        jLabel_CloseForm_ = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_BooksList_ = new javax.swing.JTable();
        jLabel_Image = new javax.swing.JLabel();
        jLabel_ISBN = new javax.swing.JLabel();
        jLabel_Name = new javax.swing.JLabel();
        jLabel_Author = new javax.swing.JLabel();
        jLabel_Genre = new javax.swing.JLabel();
        jLabel_Publisher = new javax.swing.JLabel();
        jLabel_Price = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_Search_ = new javax.swing.JTextField();
        jButton_SearchByNameOrDesc_ = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton_SearchBetweenTwoDate_ = new javax.swing.JButton();
        jDateChooser_From_ = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser_To_ = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel_FormTitle.setBackground(new java.awt.Color(211, 84, 0));
        jLabel_FormTitle.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel_FormTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_FormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_FormTitle.setText("Books List");
        jLabel_FormTitle.setOpaque(true);

        jLabel_CloseForm_.setBackground(new java.awt.Color(211, 84, 0));
        jLabel_CloseForm_.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel_CloseForm_.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CloseForm_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_CloseForm_.setText("X");
        jLabel_CloseForm_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_CloseForm_.setOpaque(true);
        jLabel_CloseForm_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_CloseForm_MouseClicked(evt);
            }
        });

        jTable_BooksList_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_BooksList_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_BooksList_MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_BooksList_);

        jLabel_Image.setBackground(new java.awt.Color(153, 204, 255));
        jLabel_Image.setOpaque(true);

        jLabel_ISBN.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel_ISBN.setForeground(new java.awt.Color(0, 51, 153));
        jLabel_ISBN.setText("ISBN:");

        jLabel_Name.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel_Name.setForeground(new java.awt.Color(0, 51, 153));
        jLabel_Name.setText("Name:");

        jLabel_Author.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel_Author.setForeground(new java.awt.Color(0, 51, 153));
        jLabel_Author.setText("Author:");

        jLabel_Genre.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel_Genre.setForeground(new java.awt.Color(0, 51, 153));
        jLabel_Genre.setText("Genre:");

        jLabel_Publisher.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel_Publisher.setForeground(new java.awt.Color(0, 51, 153));
        jLabel_Publisher.setText("Publisher:");

        jLabel_Price.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel_Price.setForeground(new java.awt.Color(0, 51, 153));
        jLabel_Price.setText("Price:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search by name or description"));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("Value to search:");

        jTextField_Search_.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jButton_SearchByNameOrDesc_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_SearchByNameOrDesc_.setText("Search");
        jButton_SearchByNameOrDesc_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SearchByNameOrDesc_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_Search_, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_SearchByNameOrDesc_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_Search_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_SearchByNameOrDesc_)))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Search between two date"));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setText("From:");

        jButton_SearchBetweenTwoDate_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_SearchBetweenTwoDate_.setText("Search");
        jButton_SearchBetweenTwoDate_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SearchBetweenTwoDate_ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setText("To:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser_From_, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser_To_, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_SearchBetweenTwoDate_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser_To_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser_From_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton_SearchBetweenTwoDate_)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_CloseForm_, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_ISBN)
                            .addComponent(jLabel_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Name)
                            .addComponent(jLabel_Author)
                            .addComponent(jLabel_Genre)
                            .addComponent(jLabel_Publisher)
                            .addComponent(jLabel_Price)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_CloseForm_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_ISBN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Author)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Genre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Publisher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Price)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_CloseForm_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_CloseForm_MouseClicked
        // close the form
        this.dispose();
    }//GEN-LAST:event_jLabel_CloseForm_MouseClicked

    private void jButton_SearchByNameOrDesc_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SearchByNameOrDesc_ActionPerformed
        // search and display data in the jTable
        String valueSearch = jTextField_Search_.getText();
        
        // search by fistname and lastname
        populateJtableWithBooksByName(valueSearch);
    }//GEN-LAST:event_jButton_SearchByNameOrDesc_ActionPerformed

    private void jTable_BooksList_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_BooksList_MouseClicked
        // display the selected data
        try {
            
            // search book by ID and display data
            int rowIndex = jTable_BooksList_.getSelectedRow();
            int id = Integer.parseInt(jTable_BooksList_.getModel().getValueAt(rowIndex, 0).toString());
            // get book data
            BookDTO selectedBook = book.getBookByID(id);
            
            if(selectedBook != null) {
                jLabel_ISBN.setText(selectedBook.getIsbn());
                jLabel_Name.setText(selectedBook.getName());
                
                // we need to display the author name
                String firstname = author.getAuthorByID(selectedBook.getAuthor_id()).getFirstName();
                String lastname = author.getAuthorByID(selectedBook.getAuthor_id()).getLastName();
                String fullname = firstname + " " + lastname;
                jLabel_Author.setText(fullname);
                
                // we need to dislpaly the genre name
                String genrename = genre.getGenreByID(selectedBook.getGenre_id()).getName();
                jLabel_Genre.setText(genrename);
                
                jLabel_Publisher.setText(selectedBook.getPublisher());
                jLabel_Price.setText(String.valueOf(selectedBook.getPrice()) + " " + "VNĐ");
                
                
            
            // display the book image
            String image = selectedBook.getPicture();
            String picture = myPath + "\\" + image;
            
            func.displayImageByPath(jLabel_Image.getWidth(), jLabel_Image.getHeight(), picture, jLabel_Image);
            } else {
                JOptionPane.showMessageDialog(null, "No book with this id is found", "Notification", 3);
            }
            
        } catch (Exception ex) {
            //Logger.getLogger(EditMemberForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Enter the Valid Book ID", "Notification", 3);
        }
    }//GEN-LAST:event_jTable_BooksList_MouseClicked

    private void jButton_SearchBetweenTwoDate_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SearchBetweenTwoDate_ActionPerformed
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateFrom = dateFormat.format(jDateChooser_From_.getDate());
            String dateTo = dateFormat.format(jDateChooser_To_.getDate());

            populateJtableWithBooksByDate(dateFrom, dateTo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Select the date", "Notification", 2);
        } 
    }//GEN-LAST:event_jButton_SearchBetweenTwoDate_ActionPerformed

    // create a function to populate the jtable with books
    public void populateJtableWithBooks() {
        
        ArrayList<BookDTO> bookList = book.getArrBook();
        
        // jtable columns
        String[] colNames = {"ID","ISBN", "Title", "Author", "Genre", "Quantity", "Publisher", "Price", "Date-RCV"};
        
        // jtable rows
        Object[][] rows = new Object[bookList.size()][colNames.length];
        
        for(int i = 0; i < bookList.size(); i++) {
            rows[i][0] = bookList.get(i).getBook_id();
            rows[i][1] = bookList.get(i).getIsbn();
            rows[i][2] = bookList.get(i).getName();
            
            String firstName = author.getAuthorByID(bookList.get(i).getAuthor_id()).getFirstName();
            String lastName = author.getAuthorByID(bookList.get(i).getAuthor_id()).getLastName();
            String fullName = firstName + " " + lastName;
            rows[i][3] = fullName;
            
            String genreName = genre.getGenreByID(bookList.get(i).getGenre_id()).getName();
            rows[i][4] = genreName;
            
            rows[i][5] = bookList.get(i).getTotalQuantity();
            rows[i][6] = bookList.get(i).getPublisher();
            rows[i][7] = bookList.get(i).getPrice();
            rows[i][8] = bookList.get(i).getDate_received();
        }
        
        DefaultTableModel model = new DefaultTableModel(rows, colNames);
        jTable_BooksList_.setModel(model);
    }
    
    public void populateJtableWithBooksByName(String value) {
        
        ArrayList<BookDTO> bookList = book.bookListByName(value);
        
        // jtable columns
        String[] colNames = {"ID","ISBN", "Title", "Author", "Genre", "Quantity", "Publisher", "Price", "Date-RCV"};
        
        // jtable rows
        Object[][] rows = new Object[bookList.size()][colNames.length];
        
        for(int i = 0; i < bookList.size(); i++) {
            rows[i][0] = bookList.get(i).getBook_id();
            rows[i][1] = bookList.get(i).getIsbn();
            rows[i][2] = bookList.get(i).getName();
            
            String firstName = author.getAuthorByID(bookList.get(i).getAuthor_id()).getFirstName();
            String lastName = author.getAuthorByID(bookList.get(i).getAuthor_id()).getLastName();
            String fullName = firstName + " " + lastName;
            rows[i][3] = fullName;
            
            String genreName = genre.getGenreByID(bookList.get(i).getGenre_id()).getName();
            rows[i][4] = genreName;
            
            rows[i][5] = bookList.get(i).getTotalQuantity();
            rows[i][6] = bookList.get(i).getPublisher();
            rows[i][7] = bookList.get(i).getPrice();
            rows[i][8] = bookList.get(i).getDate_received();
        }
        
        DefaultTableModel model = new DefaultTableModel(rows, colNames);
        jTable_BooksList_.setModel(model);
    }
    
    public void populateJtableWithBooksByDate(String dateFrom, String dateTo) {
        
        ArrayList<BookDTO> bookList = book.bookListByDate(dateFrom, dateTo);
        
        // jtable columns
        String[] colNames = {"ID","ISBN", "Title", "Author", "Genre", "Quantity", "Publisher", "Price", "Date-RCV"};
        
        // jtable rows
        Object[][] rows = new Object[bookList.size()][colNames.length];
        
        for(int i = 0; i < bookList.size(); i++) {
            rows[i][0] = bookList.get(i).getBook_id();
            rows[i][1] = bookList.get(i).getIsbn();
            rows[i][2] = bookList.get(i).getName();
            
            String firstName = author.getAuthorByID(bookList.get(i).getAuthor_id()).getFirstName();
            String lastName = author.getAuthorByID(bookList.get(i).getAuthor_id()).getLastName();
            String fullName = firstName + " " + lastName;
            rows[i][3] = fullName;
            
            String genreName = genre.getGenreByID(bookList.get(i).getGenre_id()).getName();
            rows[i][4] = genreName;
            
            rows[i][5] = bookList.get(i).getTotalQuantity();
            rows[i][6] = bookList.get(i).getPublisher();
            rows[i][7] = bookList.get(i).getPrice();
            rows[i][8] = bookList.get(i).getDate_received();
        }
        
        DefaultTableModel model = new DefaultTableModel(rows, colNames);
        jTable_BooksList_.setModel(model);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    //javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BooksListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BooksListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BooksListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BooksListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BooksListForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_SearchBetweenTwoDate_;
    private javax.swing.JButton jButton_SearchByNameOrDesc_;
    private com.toedter.calendar.JDateChooser jDateChooser_From_;
    private com.toedter.calendar.JDateChooser jDateChooser_To_;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_Author;
    private javax.swing.JLabel jLabel_CloseForm_;
    private javax.swing.JLabel jLabel_FormTitle;
    private javax.swing.JLabel jLabel_Genre;
    private javax.swing.JLabel jLabel_ISBN;
    private javax.swing.JLabel jLabel_Image;
    private javax.swing.JLabel jLabel_Name;
    private javax.swing.JLabel jLabel_Price;
    private javax.swing.JLabel jLabel_Publisher;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_BooksList_;
    private javax.swing.JTextField jTextField_Search_;
    // End of variables declaration//GEN-END:variables
}
